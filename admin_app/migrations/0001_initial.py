# Generated by Django 5.1.4 on 2024-12-10 15:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(help_text='The sender of the message (User or Admin)', max_length=100)),
                ('receiver', models.CharField(help_text='The receiver of the message (User or Admin)', max_length=100)),
                ('title', models.CharField(help_text='Title of the message or query', max_length=255)),
                ('message', models.TextField(help_text='The content of the message or query')),
                ('role', models.CharField(choices=[('User', 'User'), ('Admin', 'Admin')], default='User', help_text='Role of the sender', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved'), ('unsent', 'Unsent')], default='pending', help_text='Current status of the query', max_length=20)),
                ('sent_message', models.CharField(blank=True, help_text='Optional message sent in response', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Time when the message was sent')),
                ('deleted_by_admin', models.BooleanField(default=False, help_text='Flag to indicate if the message has been unsent by the admin')),
            ],
            options={
                'verbose_name': 'Communication',
                'verbose_name_plural': 'Communications',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('total_beds', models.IntegerField()),
                ('available_beds', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_logo', models.FileField(default='policy_logos/default_scheme.jpg', upload_to='policy_logos/')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('start_age', models.PositiveIntegerField(blank=True, null=True)),
                ('end_age', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField()),
                ('target_audience', models.CharField(choices=[('hospital', 'Hospital'), ('user', 'User'), ('both', 'Both Hospital and User')], max_length=20)),
                ('implementation_scope', models.CharField(choices=[('state', 'State'), ('city', 'City'), ('region', 'Region'), ('national', 'National')], max_length=20)),
                ('category', models.CharField(choices=[('infrastructure', 'Infrastructure and Resource Enhancement'), ('quality', 'Quality Assurance and Performance'), ('workforce', 'Workforce Policies'), ('accessibility', 'Accessibility and Affordability'), ('awareness', 'Health Awareness and Promotion'), ('public_health', 'Public Health and Safety'), ('financial', 'Financial and Incentive-Based Policies'), ('research', 'Research and Innovation')], max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('budget_allocated', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_links', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('encrypted_password', models.BinaryField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='admin_users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='admin_users', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_app.adminuser')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('specialization', models.CharField(max_length=255)),
                ('contact_number', models.CharField(help_text="Doctor's contact number", max_length=15)),
                ('email', models.EmailField(help_text="Doctor's email address", max_length=255, unique=True)),
                ('address', models.TextField(help_text="Doctor's full address")),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], help_text="Doctor's gender", max_length=1)),
                ('profile_photo', models.ImageField(blank=True, help_text='Profile photo of the doctor', null=True, upload_to='doctor_photos/')),
                ('medical_license_number', models.CharField(help_text="Doctor's medical license number", max_length=100, unique=True)),
                ('license_file', models.FileField(blank=True, help_text="File containing the doctor's medical license", null=True, upload_to='doctor_licenses/')),
                ('years_of_experience', models.IntegerField(default=0, help_text='Number of years of experience')),
                ('is_available', models.BooleanField(default=True, help_text='Whether the doctor is available for consultations')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('on_leave', 'On Leave')], default='active', help_text='Current status of the doctor', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to='admin_app.hospital')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='admin_app.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('details', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_reports', to='admin_app.hospital')),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_app.adminuser')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_name', models.CharField(max_length=255)),
                ('statistics', models.JSONField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program_performance', to='admin_app.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('incident', 'Incident'), ('performance', 'Performance')], max_length=50)),
                ('content', models.TextField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_app.adminuser')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('equipment', 'Equipment'), ('medicine', 'Medicine')], max_length=50)),
                ('quantity', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='admin_app.hospital')),
            ],
        ),
    ]
